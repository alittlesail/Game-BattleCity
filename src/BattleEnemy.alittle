
namespace BattleCity;

public class BattleEnemy : BattleRole
{
    private bool _flash = false;
    private double _walk_frame = 0;
    private double _flash_frame = 0;

    private double _changed_frame = 0;
    private double _fire_frame = 0;

    public fun StartBorn(int row, int col, int level, int dir, bool flash)
    {
        this._level = level;
        this._dir = dir;
        this._flash = flash;

        if (this._level == 1)
        	this._speed = 0.08;
        elseif (this._level == 2)
        	this._speed = 0.1;
        else
        	this._speed = 0.06;
        this._fire_count = 0;
        this.x = col * g_GCenter.battle_scene.cell_size;
        this.y = row * g_GCenter.battle_scene.cell_size;

        this._sprite.visible = false;
        this._effect_explosion.visible = false;
        this._effect_explosion.Stop();
        this._effect_born.visible = true;
        this._effect_born.Play();

        var loop = new ALittle.LoopTimer(bind(this.HandleBornEnd, this), 1000);
        loop.Start();
    }

    private fun HandleBornEnd()
    {
        this._sprite.visible = true;
        this._effect_born.visible = false;
        this.UpdateFrame(0);
        this.UpdateWalk(0);
    }

    // 返回值：是否需要爆炸
    public fun BeAttack() : bool
    {
        if (this._flash)
        {
            this._flash = false;
            g_GCenter.battle_scene.GenerateItem();
            return false;
        }

        this.StartExplosion();
        return true;
    }

    public get is_enemy() : bool { return true; }

    public fun UpdateFrame(int frame_time)
    {
        if (this.alive && !g_GCenter.battle_scene.IsEnemyStopping())
        {
            this._changed_frame += frame_time * 0.001;
            if (this._changed_frame >= 2) this._changed_frame = 0;
            if (this._changed_frame > 1 && ALittle.Math_RandomInt(1, 100) > 95)
                this.Walk(ALittle.Math_RandomInt(DirType.DT_UP, DirType.DT_RIGHT), frame_time);
            else
            {
                if (!this.Walk(this._dir, frame_time))
                	this._changed_frame = 1;
            }

            this._fire_frame += frame_time * 0.001;
            if (this._fire_frame >= 2) this._fire_frame = 0;
            if (this._fire_frame > 1 && ALittle.Math_RandomInt(1, 100) > 90)
            	this.Fire();
        }

        this.UpdateSpriteCol(frame_time);
    }

    public fun UpdateWalk(int frame_time)
    {
        if (this._dir == DirType.DT_UP)
            this._sprite.row_index = 1;
        elseif (this._dir == DirType.DT_RIGHT)
        	this._sprite.row_index = 2;
        elseif (this._dir == DirType.DT_DOWN)
        	this._sprite.row_index = 3;
        elseif (this._dir == DirType.DT_LEFT)
        	this._sprite.row_index = 4;

        this._walk_frame +=0.01 * frame_time;
        if (this._walk_frame > 2) this._walk_frame = 0;

        this.UpdateSpriteCol(frame_time);
    }

    private fun UpdateSpriteCol(int frame_time)
    {
        this._flash_frame +=0.005 * frame_time;
        if (this._flash_frame > 2) this._flash_frame = 0;

        if (this._flash && this._flash_frame <= 1)
        {
            if (this._walk_frame <= 1)
                this._sprite.col_index = (this._level - 1) * 4 + 2 + 1;
            else
                this._sprite.col_index = (this._level - 1) * 4 + 2 + 2;
        }
        else
        {
            if (this._walk_frame <= 1)
                this._sprite.col_index = (this._level - 1) * 4 + 1;
            else
                this._sprite.col_index = (this._level - 1) * 4 + 2;
        }
    }
}
